/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.pauloarcenio.album.gui;

import br.com.pauloarcenio.album.base.Base;
import br.com.pauloarcenio.album.bd.AlbumBD;
import br.com.pauloarcenio.album.dao.FigurinhaDAO;
import br.com.pauloarcenio.album.dao.IrmaoDAO;
import br.com.pauloarcenio.album.modelo.entidade.Figurinha;
import br.com.pauloarcenio.album.modelo.entidade.Irmao;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author binho
 */
public class AlbumGUI extends javax.swing.JFrame {

    private int pagina;

    /**
     * Creates new form AlbumGUI
     */
    public AlbumGUI() {
        initComponents();
        AlbumBD.inicializarBD();
//        AlbumBD.popular();
        pagina = 1;
        atualiza();
        atualizaIrmao();

    }

    private void atualiza() {

        String[] cposFigurinha = {"Número", "Página", "Descr.", "Qtde"};
        List<Figurinha> figurinhas = FigurinhaDAO.selecionarPorPagina(pagina);
        String[][] dadosFigurinhas;
        dadosFigurinhas = new String[figurinhas.size()][4];
        int posicao = 0;
        for (Figurinha fig : figurinhas) {
            String[] umaFigurinha = new String[4];
            umaFigurinha[0] = String.valueOf(fig.getNumero());
            umaFigurinha[1] = String.valueOf(fig.getPagina());
            umaFigurinha[2] = fig.getDescricao();
            umaFigurinha[3] = String.valueOf(fig.getQtde());
            dadosFigurinhas[posicao++] = umaFigurinha;
        }
        DefaultTableModel modeloFig = new DefaultTableModel(
                dadosFigurinhas, cposFigurinha);
        jTable1.setModel(modeloFig);

    }

    private void atualizaIrmao() {
        String[] cposIrmao = {"ID", "Nome", "Contato"};
        List<Irmao> irmaos = IrmaoDAO.selecionarTodos();
        String[][] dadosIrmaos;
        dadosIrmaos = new String[irmaos.size()][3];
        int posicao = 0;
        for (Irmao irm : irmaos) {
            String[] umIrmao = new String[3];
            umIrmao[0] = String.valueOf(irm.getId());
            umIrmao[1] = irm.getNome();
            umIrmao[2] = irm.getContato();
            dadosIrmaos[posicao++] = umIrmao;
        }
        DefaultTableModel modeloIrmao = new DefaultTableModel(
                dadosIrmaos, cposIrmao);
        jTable2.setModel(modeloIrmao);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jbAdicionar = new javax.swing.JButton();
        jbRetirar = new javax.swing.JButton();
        jbTrocar = new javax.swing.JButton();
        jbAnterior = new javax.swing.JButton();
        jbProxima = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jtDescricaoFigurinha = new javax.swing.JTextField();
        jbDescricao = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jbModificarIrmao = new javax.swing.JButton();
        jbAdicionarIrmao = new javax.swing.JButton();
        jbApagarIrmao = new javax.swing.JButton();
        jlNome = new javax.swing.JLabel();
        jtNomeIrmao = new javax.swing.JTextField();
        jlContatoIrmao = new javax.swing.JLabel();
        jtContatoIrmao = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jbAdicionar.setText("Adicionar");
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jbRetirar.setText("Retirar");
        jbRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRetirarActionPerformed(evt);
            }
        });

        jbTrocar.setText("Trocar");
        jbTrocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTrocarActionPerformed(evt);
            }
        });

        jbAnterior.setText("Anterior");
        jbAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorActionPerformed(evt);
            }
        });

        jbProxima.setText("Próxima");
        jbProxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jbRetirar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jbTrocar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jbAnterior)
                        .addGap(18, 18, 18)
                        .addComponent(jbProxima)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAdicionar)
                    .addComponent(jbRetirar)
                    .addComponent(jbTrocar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAnterior)
                    .addComponent(jbProxima))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jLabel1.setText("Descrição");

        jtDescricaoFigurinha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtDescricaoFigurinhaFocusGained(evt);
            }
        });

        jbDescricao.setText("Mudar Desc.");
        jbDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDescricaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtDescricaoFigurinha, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtDescricaoFigurinha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbDescricao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Figurinha", jPanel2);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jbModificarIrmao.setText("Modificar");
        jbModificarIrmao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarIrmaoActionPerformed(evt);
            }
        });

        jbAdicionarIrmao.setText("Adicionar");
        jbAdicionarIrmao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarIrmaoActionPerformed(evt);
            }
        });

        jbApagarIrmao.setText("Apagar");
        jbApagarIrmao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbApagarIrmaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jbAdicionarIrmao)
                .addGap(36, 36, 36)
                .addComponent(jbModificarIrmao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jbApagarIrmao)
                .addGap(50, 50, 50))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbModificarIrmao)
                    .addComponent(jbAdicionarIrmao)
                    .addComponent(jbApagarIrmao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jlNome.setText("Nome:");

        jtNomeIrmao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtNomeIrmaoFocusGained(evt);
            }
        });

        jlContatoIrmao.setText("Contato:");

        jtContatoIrmao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtContatoIrmaoFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jlNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtNomeIrmao, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlContatoIrmao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtContatoIrmao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(jtNomeIrmao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlContatoIrmao)
                    .addComponent(jtContatoIrmao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Irmãos", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbProximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximaActionPerformed
        if (pagina >= 1 && pagina < 31) {
            pagina++;
            atualiza();
        } else if (pagina == 31) {
            JOptionPane.showMessageDialog(null, "Você está na última página!");
        }
    }//GEN-LAST:event_jbProximaActionPerformed

    private void jbAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorActionPerformed
        if (pagina <= 31 && pagina > 1) {
            pagina--;
            atualiza();
        } else if (pagina == 1) {
            JOptionPane.showMessageDialog(null, "Você está na primeira página!");
        }
    }//GEN-LAST:event_jbAnteriorActionPerformed

    private void jbAdicionarIrmaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarIrmaoActionPerformed
        Irmao irmao = null;
        irmao = new Irmao(jtNomeIrmao.getText(), jtContatoIrmao.getText());
        IrmaoDAO.inserir(irmao);
        atualizaIrmao();
    }//GEN-LAST:event_jbAdicionarIrmaoActionPerformed

    private void jbApagarIrmaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbApagarIrmaoActionPerformed
        int selecionado = jTable2.getSelectedRow();
        if (jTable2.isRowSelected(selecionado)) {
            String idString = (String) jTable2.getValueAt(selecionado, 0);
            byte id = Byte.parseByte(idString);
            IrmaoDAO.remover(IrmaoDAO.selecionaPorID(id));
            atualizaIrmao();
        } else {
            Base.mensagem("Selecione um irmão para apagar.");
        }

    }//GEN-LAST:event_jbApagarIrmaoActionPerformed

    private void jbModificarIrmaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarIrmaoActionPerformed
        int selecionado = jTable2.getSelectedRow();
        if (jTable2.isRowSelected(selecionado)) {
            String idString = (String) jTable2.getValueAt(selecionado, 0);
            byte id = Byte.parseByte(idString);
            Irmao irmao = IrmaoDAO.selecionaPorID(id);
            String nome = jtNomeIrmao.getText();
            String contato = jtContatoIrmao.getText();
            irmao.setNome(nome);
            irmao.setContato(contato);
            IrmaoDAO.alterar(irmao);
            atualizaIrmao();
        } else {
            Base.mensagem("Selecione um irmão!");
        }


    }//GEN-LAST:event_jbModificarIrmaoActionPerformed

    private void jtNomeIrmaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtNomeIrmaoFocusGained
        int selecionado = jTable2.getSelectedRow();
        String idString = (String) jTable2.getValueAt(selecionado, 0);
        byte id = Byte.parseByte(idString);
        jtNomeIrmao.setText(IrmaoDAO.selecionaPorID(id).getNome());
    }//GEN-LAST:event_jtNomeIrmaoFocusGained

    private void jtContatoIrmaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtContatoIrmaoFocusGained
        int selecionado = jTable2.getSelectedRow();
        String idString = (String) jTable2.getValueAt(selecionado, 0);
        byte id = Byte.parseByte(idString);
        jtContatoIrmao.setText(IrmaoDAO.selecionaPorID(id).getContato());
    }//GEN-LAST:event_jtContatoIrmaoFocusGained

    private void jtDescricaoFigurinhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtDescricaoFigurinhaFocusGained
        int selecionado = jTable1.getSelectedRow();
        String numeroString = (String) jTable1.getValueAt(selecionado, 0);
        int numero = Integer.parseInt(numeroString);
        jtDescricaoFigurinha.setText(FigurinhaDAO.selecionaPorID(numero).getDescricao());
    }//GEN-LAST:event_jtDescricaoFigurinhaFocusGained

    private void jbDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDescricaoActionPerformed
        int selecionado = jTable1.getSelectedRow();
        if (jTable1.isRowSelected(selecionado)) {
            String numeroString = (String) jTable1.getValueAt(selecionado, 0);
            int numero = Integer.parseInt(numeroString);
            Figurinha figurinha = FigurinhaDAO.selecionaPorID(numero);
            String descricao = jtDescricaoFigurinha.getText();
            figurinha.setDescricao(descricao);
            FigurinhaDAO.alterar(figurinha);
            atualiza();
        } else {
            Base.mensagem("Selecione uma figurinha para alterar descrição!");
        }

    }//GEN-LAST:event_jbDescricaoActionPerformed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        int selecionado = jTable1.getSelectedRow();
        if (jTable1.isRowSelected(selecionado)) {
            String numeroString = (String) jTable1.getValueAt(selecionado, 0);
            int numero = Integer.parseInt(numeroString);
            Figurinha figurinha = FigurinhaDAO.selecionaPorID(numero);
            int qtd = figurinha.getQtde();
            if (qtd >= 0) {
                qtd++;
                figurinha.setQtde(qtd);
                FigurinhaDAO.alterar(figurinha);
                atualiza();
            }
        } else {
            Base.mensagem("Selecione uma figurinha!");
        }


    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jbRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRetirarActionPerformed

        int selecionado = jTable1.getSelectedRow();
        if (jTable1.isRowSelected(selecionado)) {
            String numeroString = (String) jTable1.getValueAt(selecionado, 0);
            int numero = Integer.parseInt(numeroString);
            Figurinha figurinha = FigurinhaDAO.selecionaPorID(numero);
            int qtd = figurinha.getQtde();
            if (qtd > 1 | qtd == 0) {
                qtd--;
                figurinha.setQtde(qtd);
                FigurinhaDAO.alterar(figurinha);
                atualiza();
            } else {
                Base.mensagem("Você não tem nenhuma figurinha para retirar!");
            }

        } else {
            Base.mensagem("Selecione uma figurinha!");
        }

    }//GEN-LAST:event_jbRetirarActionPerformed

    private void jbTrocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTrocarActionPerformed
        int selecionado = jTable1.getSelectedRow();
        if (jTable1.isRowSelected(selecionado)) {
            String numeroString = (String) jTable1.getValueAt(selecionado, 0);
            int numero = Integer.parseInt(numeroString);
            Figurinha figurinha = FigurinhaDAO.selecionaPorID(numero);
            if (figurinha.getQtde() > 1) {
                String aux = JOptionPane.showInputDialog(null, "Por qual figurinha deseja trocar?");
                figurinha.setQtde(figurinha.getQtde() - 1);
                FigurinhaDAO.alterar(figurinha);
                int novaFigID = Integer.parseInt(aux);
                Figurinha novaFigurinha = FigurinhaDAO.selecionaPorID(novaFigID);
                novaFigurinha.setQtde(novaFigurinha.getQtde() + 1);
                FigurinhaDAO.alterar(novaFigurinha);
                atualiza();
            } else {
                Base.mensagem("Não da pra trocar!");
            }
        } else Base.mensagem("Selecione uma figurinha!");

    }//GEN-LAST:event_jbTrocarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlbumGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlbumGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlbumGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlbumGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlbumGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbAdicionarIrmao;
    private javax.swing.JButton jbAnterior;
    private javax.swing.JButton jbApagarIrmao;
    private javax.swing.JButton jbDescricao;
    private javax.swing.JButton jbModificarIrmao;
    private javax.swing.JButton jbProxima;
    private javax.swing.JButton jbRetirar;
    private javax.swing.JButton jbTrocar;
    private javax.swing.JLabel jlContatoIrmao;
    private javax.swing.JLabel jlNome;
    private javax.swing.JTextField jtContatoIrmao;
    private javax.swing.JTextField jtDescricaoFigurinha;
    private javax.swing.JTextField jtNomeIrmao;
    // End of variables declaration//GEN-END:variables
}
